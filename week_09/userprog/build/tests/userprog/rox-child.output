Kernel command line: -q -f put rox-child put child-rox run rox-child
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  65,433,600 loops/s.
hd0:0: detected 321 sector (160 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 220 sector (110 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'rox-child' into the file system...
Putting 'child-rox' into the file system...
Executing 'rox-child':
(rox-child) begin
(rox-child) open "child-rox"
(rox-child) read "child-rox"
(rox-child) write "child-rox"
(rox-child) exec "child-rox 1"
Page fault at 0x90: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at rip=8004209f90
 cr2=0000000000000090 error=               0
rax 0000000000000090 rbx 0000000000000000 rcx 0000008004242028 rdx 0000008004242028
rsp 0000008004243e80 rbp 0000008004243ea0 rsi 0000008004242028 rdi 0000000000000090
rip 0000008004209f90 r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000216 r12 000000800421cdae r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000002
es: 001b ds: 001b cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:98 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x8004217e34 0x800421c92a 0x800421cad7 0x8004208d97 0x8004209358 0x800421b647 0x800421d077 0x800421ce35 0x800421cb4c 0x400251 0x4003c5 0x400e66.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 66 ticks
Thread: 30 idle ticks, 30 kernel ticks, 6 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 114 reads, 479 writes
hd1:0: 220 reads, 0 writes
Console: 1943 characters output
Key